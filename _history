{"entries":[{"timestamp":1753890752416,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":0,"length1":1,"diffs":[[1," "]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":132,"length1":0,"diffs":[[1,"        \"main.blocks\",\n"]]},{"start1":224,"length1":31,"diffs":[[1,"    \"additionalFilePaths\": []\n"]]}]},{"type":"removed","filename":"main.blocks","value":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables></variables>\n  <block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block>\n</xml>"}]},{"timestamp":1753890772249,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"pxt.json","patch":[{"start1":172,"length1":46,"diffs":[[1,"        \"assets.json\"\n"]]}]},{"type":"added","filename":"deltaTime.ts","value":""}]},{"timestamp":1753933216175,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"deltaTime.ts","patch":[{"start1":0,"length1":828,"diffs":[[1,""]]}]}]},{"timestamp":1753933216179,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":0,"length1":71,"diffs":[[1,""]]},{"start1":1,"length1":452,"diffs":[[1,""]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":88,"length1":307,"diffs":[[1,"        \"device\": \"*\"\n"]]},{"start1":195,"length1":121,"diffs":[[1,"        \"deltaTime.ts\"\n"]]}]},{"type":"edited","filename":"deltaTime.ts","patch":[{"start1":0,"length1":55,"diffs":[[1,"\n/**\n* Use this file to define custom functions and blocks.\n* Read more at https://arcade.makecode.com/blocks/custom\n*/\n\nenum MyEnum {\n    //% block=\"one\"\n    One,\n    //% block=\"two\"\n    Two\n}\n\n/**\n * Custom blocks\n */\n//% weight=100 color=#0fbc11 icon=\"ïƒƒ\"\nnamespace custom {\n"]]},{"start1":285,"length1":159,"diffs":[[1,"     * TODO: describe your function here\n     * @param n describe parameter here, eg: 5\n     * @param s describe parameter here, eg: \"Hello\"\n     * @param e describe parameter here\n     */\n"]]},{"start1":488,"length1":125,"diffs":[[1,"    export function foo(n: number, s: string, e: MyEnum): void {\n        // Add code here\n"]]},{"start1":584,"length1":606,"diffs":[[1,""]]},{"start1":585,"length1":55,"diffs":[[1,""]]},{"start1":593,"length1":56,"diffs":[[1,"     * TODO: describe your function here\n     * @param value describe value here, eg: 5\n     */\n"]]},{"start1":703,"length1":99,"diffs":[[1,"    export function fib(value: number): number {\n        return value <= 1 ? value : fib(value -1) + fib(value - 2);\n"]]},{"start1":826,"length1":1,"diffs":[[1,"}\n"]]}]},{"type":"added","filename":"images.g.jres","value":"{\n    \"image1\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAgAAAAAAACIiAAAAAAAAIiIAAAAAAAAgAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"cursor\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myImages\"\n    }\n}"},{"type":"added","filename":"images.g.ts","value":"// Auto-generated code. Do not edit.\nnamespace myImages {\n\n    helpers._registerFactory(\"image\", function(name: string) {\n        switch(helpers.stringTrim(name)) {\n            case \"image1\":\n            case \"cursor\":return img`\n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . 2 2 . . . . . . . \n. . . . . . 2 2 2 2 . . . . . . \n. . . . . . 2 2 2 2 . . . . . . \n. . . . . . . 2 2 . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n`;\n        }\n        return null;\n    })\n\n    helpers._registerFactory(\"animation\", function(name: string) {\n        switch(helpers.stringTrim(name)) {\n\n        }\n        return null;\n    })\n\n    helpers._registerFactory(\"song\", function(name: string) {\n        switch(helpers.stringTrim(name)) {\n\n        }\n        return null;\n    })\n\n}\n// Auto-generated code. Do not edit.\n"},{"type":"added","filename":"tilemap.g.jres","value":"{\n    \"transparency16\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true\n    },\n    \"test1\": {\n        \"id\": \"test1\",\n        \"mimeType\": \"application/mkcd-tilemap\",\n        \"data\": \"MTAxMDAwMTAwMDAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMTAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAxMDIwMjAyMDIwMjAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMjAyMDIwMjAyMDEwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDEwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMTAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAxMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDEwMjAyMDIwMjAyMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMA==\",\n        \"tileset\": [\n            \"myTiles.transparency16\",\n            \"sprites.castle.tilePath5\",\n            \"sprites.castle.tileGrass1\"\n        ],\n        \"displayName\": \"test\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myTiles\"\n    }\n}"},{"type":"added","filename":"tilemap.g.ts","value":"// Auto-generated code. Do not edit.\nnamespace myTiles {\n    //% fixedInstance jres blockIdentity=images._tile\n    export const transparency16 = image.ofBuffer(hex``);\n\n    helpers._registerFactory(\"tilemap\", function(name: string) {\n        switch(helpers.stringTrim(name)) {\n            case \"test\":\n            case \"test1\":return tiles.createTilemap(hex``, img`\n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n`, [myTiles.transparency16,sprites.castle.tilePath5,sprites.castle.tileGrass1], TileScale.Sixteen);\n        }\n        return null;\n    })\n\n    helpers._registerFactory(\"tile\", function(name: string) {\n        switch(helpers.stringTrim(name)) {\n            case \"transparency16\":return transparency16;\n        }\n        return null;\n    })\n\n}\n// Auto-generated code. Do not edit.\n"}]},{"timestamp":1753933818717,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"images.g.jres","patch":[{"start1":18,"length1":204,"diffs":[[1,"        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAgAAAAAAACIiAAAAAAAAIiIAAAAAAAAgAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n"]]}]}]},{"timestamp":1753933890095,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":145,"length1":19,"diffs":[[1,"    cursorSprite = createCursor()\n"]]},{"start1":200,"length1":120,"diffs":[[1,"function createCursor() : Sprite {\n    let cursor: Sprite = sprites.create(assets.image`cursor`, SpriteKind.Cursor)\n"]]},{"start1":340,"length1":89,"diffs":[[1,"        cursor.setPosition(browserEvents.mouseX(), browserEvents.mouseY())\n"]]},{"start1":422,"length1":0,"diffs":[[1,"    return cursor\n"]]},{"start1":523,"length1":353,"diffs":[[1,""]]}]},{"type":"edited","filename":"pxt.json","patch":[{"start1":365,"length1":66,"diffs":[[1,"        \"browser-events\": \"*\"\n"]]},{"start1":578,"length1":51,"diffs":[[1,"        \"tilemap.g.ts\"\n"]]}]},{"type":"edited","filename":"images.g.ts","patch":[{"start1":263,"length1":429,"diffs":[[1,""]]},{"start1":329,"length1":0,"diffs":[[1,". . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . 2 2 . . . . . . . \n. . . . . . 2 2 2 2 . . . . . . \n. . . . . . 2 2 2 2 . . . . . . \n. . . . . . . 2 2 . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n. . . . . . . . . . . . . . . . \n"]]}]},{"type":"added","filename":"customClasses.ts","value":"class Vector2 {\n    x: number = 0\n    y: number = 0\n\n    constructor(x: number, y: number) {\n        this.x = x\n        this.y = y\n    }\n    static ONE() {\n        return new Vector2(1, 1)\n    }\n    static ZERO() {\n        return new Vector2(0, 0)\n    }\n    length(): number {\n        let vector: Vector2 = Vector2.ZERO()\n        return spriteutils.distanceBetween(this, vector)\n    }\n    add(vector2: Vector2): Vector2 {\n        return new Vector2(this.x + vector2.x, this.y + vector2.y)\n    }\n    subtract(vector2: Vector2): Vector2 {\n        return new Vector2(vector2.x - this.x, vector2.y - this.y)\n    }\n    normalize(): Vector2 {\n        let length: number = this.length()\n        return new Vector2(this.x / length, this.y / length)\n    }\n    scale(scalar: number): Vector2 {\n        return new Vector2(scalar * this.x, scalar * this.y)\n    }\n    lerp(vector1: Vector2, t: number): Vector2 {\n        let resultVector: Vector2 = Vector2.ZERO()\n        resultVector.x = Math.lerp(this.x, vector1.x, t)\n        resultVector.y = Math.lerp(this.y, vector1.y, t)\n        return resultVector\n    }\n    dot(vector1: Vector2): number {\n        return this.x * vector1.x + this.y * vector1.y\n    }\n}"}]},{"timestamp":1753934483089,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":218,"length1":75,"diffs":[[1,"    let cursorSprite: Sprite = sprites.create(assets.image`cursor`, SpriteKind.Cursor)\n"]]},{"start1":329,"length1":168,"diffs":[[1,"        cursorSprite.setPosition(browserEvents.mouseX() + 5, browserEvents.mouseY() + 5)\n"]]},{"start1":571,"length1":83,"diffs":[[1,"    let cameraPosition: Vector2 = Vector2.ZERO\n"]]},{"start1":642,"length1":305,"diffs":[[1,"        if(controller.up.isPressed()){\n            scene.centerCameraAt(CameraProperty.X,CameraProperty.Y - 5)\n        } else if (controller.down.isPressed()){\n            scene.centerCameraAt(100, 50)\n"]]},{"start1":854,"length1":364,"diffs":[[1,""]]}]}]},{"timestamp":1753935083062,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":687,"length1":37,"diffs":[[1,"    const cameraSpeed: number = 1\n"]]},{"start1":808,"length1":66,"diffs":[[1,"            cameraPosition.y -= cameraSpeed*game.getDeltaTime()\n"]]},{"start1":1060,"length1":309,"diffs":[[1,"        if(controller.right.isPressed() && cameraPosition.x > 0){\n            cameraPosition.x += cameraP\n        } else if (controller.left.isPressed() && cameraPosition.x < game.currentScene().tileMap.areaWidth()){\n\n"]]},{"start1":1353,"length1":0,"diffs":[[1,"        cursorSprite.sayText(game.currentScene().tileMap.areaHeight())\n"]]}]}]},{"timestamp":1753935469812,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"main.ts","patch":[{"start1":72,"length1":0,"diffs":[[1,"\n"]]}]}]},{"timestamp":1754178469931,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"images.g.jres","patch":[{"start1":18,"length1":204,"diffs":[[1,"        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAA8P8PAAAAAADwEfEPAAAAAPAREfEPAAAA8BEREfEPAAAAHxEREfEPAAAfEREREQ8AAPARERHxAAAA8BEREQ8AAAAAHxHx8QAAAAAfER8RDwAAAPDx8BHxAAAA8A8AHw8AAAAAAADwAAAAAAAAAAAAAA==\",\n"]]}]}]},{"timestamp":1754178488965,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"images.g.ts","patch":[{"start1":263,"length1":0,"diffs":[[1,". . f f f f . . . . . . . . . . \n. . f 1 1 1 f f . . . . . . . . \n. . f 1 1 1 1 1 f f . . . . . . \n. . f 1 1 1 1 1 1 1 f f . . . . \n. . . f 1 1 1 1 1 1 1 1 f f . . \n. . . f 1 1 1 1 1 1 1 1 1 f . . \n. . . . f 1 1 1 1 1 1 1 f . . . \n. . . . f 1 1 1 1 1 1 f . . . . \n. . . . . f 1 1 1 1 f 1 f . . . \n. . . . . f 1 1 1 f 1 1 1 f . . \n. . . . . . f 1 f . f 1 1 1 f . \n. . . . . . f f . . . f 1 f . . \n. . . . . . . . . . . . f . . . \n"]]},{"start1":758,"length1":429,"diffs":[[1,""]]}]}]},{"timestamp":1754241119731,"editorVersion":"2.0.56","changes":[{"type":"edited","filename":"pxt.json","patch":[{"start1":672,"length1":44,"diffs":[[1,""]]}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"},{"type":"added","filename":"main.blocks","value":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables></variables>\n  <block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block>\n</xml>"}]}],"snapshots":[{"timestamp":1753890752415,"editorVersion":"2.0.56","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <variables></variables>\n  <block type=\"pxt-on-start\" x=\"0\" y=\"0\"></block>\n</xml>","main.ts":" ","README.md":" ","assets.json":"","pxt.json":"{\n    \"name\": \"tower-defense-revitalized\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1753935017146,"editorVersion":"2.0.56","text":{"main.ts":"namespace SpriteKind {\n    export const Cursor = SpriteKind.create()\n}\n\n\nlet cursorSprite: Sprite = null\n\nonStart()\n\nfunction onStart() : void {\n    createCursor()\n    createLevel()\n}\n\nfunction createCursor() : void {\n    cursorSprite = sprites.create(assets.image`cursor`, SpriteKind.Cursor)\n    forever(function(){\n        cursorSprite.setPosition(browserEvents.mouseX() + scene.cameraProperty(CameraProperty.Left), browserEvents.mouseY() + scene.cameraProperty(CameraProperty.Top))\n    })\n}\n\nfunction createLevel() : void {\n    scene.setTileMapLevel(assets.tilemap`test`)\n    cameraController()\n}\n\nfunction cameraController() : void {\n    let cameraPosition: Vector2 = Vector2.ZERO()\n    const cameraSpeed: number = 1\n    forever(function(){\n        if(controller.up.isPressed() && cameraPosition.y > 0){\n            cameraPosition.y -= cameraSpeed*game.getDeltaTime()\n        } else if (controller.down.isPressed() && cameraPosition.y < game.currentScene().tileMap.areaHeight()){\n            cameraPosition.y += cameraSpeed * game.getDeltaTime()\n        }\n        if(c)\n        scene.centerCameraAt(cameraPosition.x, cameraPosition.y)\n        cursorSprite.sayText(game.currentScene().tileMap.areaHeight())\n    })\n}","README.md":" ","assets.json":"","deltaTime.ts":"//% weight=100 color=#8E2EC4 icon=\"ïƒƒ\"\nnamespace Math {\n    /**\n    * Linear interpolation between two values\n    * @param value0 is a real number, eg: 25.44\n    * @param value1 is a different real number, eg: 52.14\n    */\n    //% block\n    export function lerp(value0: number, value1: number, t: number): number {\n        return value0 + t * (value1 - value0);\n    }\n    /**\n    * Linear interpolation between two values, in particular with angles\n    * as angles are restricted between the interval [-Math.PI, Math.PI]\n    * @param value0 is a real number, eg: 25.44\n    * @param value1 is a different real number, eg: 52.14\n    */\n    //% block\n    export function lerpAngle(value0: number, value1: number, t: number): number {\n        let horizontalComponent = (1 - t) * Math.cos(value0) + t * Math.cos(value1);\n        let verticalComponent = (1 - t) * Math.sin(value0) + t * Math.sin(value1);\n        return Math.atan2(verticalComponent, horizontalComponent);\n    }\n}\n\n//% weight=100 color=#8E2EC4 icon=\"ïƒƒ\"\nnamespace game {\n    /**\n    * The amount of time elapsed per frame\n    *\n    */\n    //% block\n    export function getDeltaTime(): number {\n        return control.eventContext().deltaTimeMillis\n    }\n}","images.g.jres":"{\n    \"image1\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAA8P8PAAAAAADwEfEPAAAAAPAREfEPAAAA8BEREfEPAAAAHxEREfEPAAAfEREREQ8AAPARERHxAAAA8BEREQ8AAAAAHxHx8QAAAAAfER8RDwAAAPDx8BHxAAAA8A8AHw8AAAAAAADwAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"cursor\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myImages\"\n    }\n}","images.g.ts":"","tilemap.g.jres":"{\n    \"transparency16\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true\n    },\n    \"test1\": {\n        \"id\": \"test1\",\n        \"mimeType\": \"application/mkcd-tilemap\",\n        \"data\": \"MTAxMDAwMTAwMDAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMTAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAxMDIwMjAyMDIwMjAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMjAyMDIwMjAyMDEwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDEwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMTAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAxMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDEwMjAyMDIwMjAyMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMA==\",\n        \"tileset\": [\n            \"myTiles.transparency16\",\n            \"sprites.castle.tilePath5\",\n            \"sprites.castle.tileGrass1\"\n        ],\n        \"displayName\": \"test\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myTiles\"\n    }\n}","tilemap.g.ts":"","customClasses.ts":"class Vector2 {\n    x: number = 0\n    y: number = 0\n\n    constructor(x: number, y: number) {\n        this.x = x\n        this.y = y\n    }\n    static ONE() {\n        return new Vector2(1, 1)\n    }\n    static ZERO() {\n        return new Vector2(0, 0)\n    }\n    length(): number {\n        let vector: Vector2 = Vector2.ZERO()\n        return spriteutils.distanceBetween(this, vector)\n    }\n    add(vector2: Vector2): Vector2 {\n        return new Vector2(this.x + vector2.x, this.y + vector2.y)\n    }\n    subtract(vector2: Vector2): Vector2 {\n        return new Vector2(vector2.x - this.x, vector2.y - this.y)\n    }\n    normalize(): Vector2 {\n        let length: number = this.length()\n        return new Vector2(this.x / length, this.y / length)\n    }\n    scale(scalar: number): Vector2 {\n        return new Vector2(scalar * this.x, scalar * this.y)\n    }\n    lerp(vector1: Vector2, t: number): Vector2 {\n        let resultVector: Vector2 = Vector2.ZERO()\n        resultVector.x = Math.lerp(this.x, vector1.x, t)\n        resultVector.y = Math.lerp(this.y, vector1.y, t)\n        return resultVector\n    }\n    dot(vector1: Vector2): number {\n        return this.x * vector1.x + this.y * vector1.y\n    }\n}","pxt.json":"{\n    \"name\": \"tower-defense-revitalized\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\",\n        \"arcade-sprite-util\": \"github:jwunderl/arcade-sprite-util#v0.4.1\",\n        \"pxt-arcade-image-transform\": \"github:robo-technical-group/pxt-arcade-image-transform#v1.0.9\",\n        \"arcade-sprite-data\": \"github:microsoft/arcade-sprite-data#v0.2.1\",\n        \"browser-events\": \"*\",\n        \"color-coded-tilemap\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\",\n        \"deltaTime.ts\",\n        \"images.g.jres\",\n        \"images.g.ts\",\n        \"tilemap.g.jres\",\n        \"tilemap.g.ts\",\n        \"customClasses.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1754178357021,"editorVersion":"2.0.56","text":{"main.ts":"namespace SpriteKind {\n    export const Cursor = SpriteKind.create()\n}\n\n\nlet cursorSprite: Sprite = null\n\nonStart()\n\nfunction onStart() : void {\n    createCursor()\n    createLevel()\n}\n\nfunction createCursor() : void {\n    cursorSprite = sprites.create(assets.image`cursor`, SpriteKind.Cursor)\n    forever(function(){\n        cursorSprite.setPosition(browserEvents.mouseX() + scene.cameraProperty(CameraProperty.Left), browserEvents.mouseY() + scene.cameraProperty(CameraProperty.Top))\n    })\n}\n\nfunction createLevel() : void {\n    scene.setTileMapLevel(assets.tilemap`test`)\n    cameraController()\n}\n\nfunction cameraController() : void {\n    let cameraPosition: Vector2 = Vector2.ZERO()\n    const cameraSpeed: number = 0.25\n    forever(function(){\n        if(controller.up.isPressed() && cameraPosition.y > 0){\n            cameraPosition.y -= cameraSpeed * game.getDeltaTime()\n        } else if (controller.down.isPressed() && cameraPosition.y < game.currentScene().tileMap.areaHeight()){\n            cameraPosition.y += cameraSpeed * game.getDeltaTime()\n        }\n        if(controller.left.isPressed() && cameraPosition.x > 0){\n            cameraPosition.x -= cameraSpeed * game.getDeltaTime()\n        } else if (controller.right.isPressed() && cameraPosition.x < game.currentScene().tileMap.areaWidth()){\n            cameraPosition.x += cameraSpeed * game.getDeltaTime()\n        }\n        scene.centerCameraAt(cameraPosition.x, cameraPosition.y)\n    })\n}","README.md":" ","assets.json":"","deltaTime.ts":"//% weight=100 color=#8E2EC4 icon=\"ïƒƒ\"\nnamespace Math {\n    /**\n    * Linear interpolation between two values\n    * @param value0 is a real number, eg: 25.44\n    * @param value1 is a different real number, eg: 52.14\n    */\n    //% block\n    export function lerp(value0: number, value1: number, t: number): number {\n        return value0 + t * (value1 - value0);\n    }\n    /**\n    * Linear interpolation between two values, in particular with angles\n    * as angles are restricted between the interval [-Math.PI, Math.PI]\n    * @param value0 is a real number, eg: 25.44\n    * @param value1 is a different real number, eg: 52.14\n    */\n    //% block\n    export function lerpAngle(value0: number, value1: number, t: number): number {\n        let horizontalComponent = (1 - t) * Math.cos(value0) + t * Math.cos(value1);\n        let verticalComponent = (1 - t) * Math.sin(value0) + t * Math.sin(value1);\n        return Math.atan2(verticalComponent, horizontalComponent);\n    }\n}\n\n//% weight=100 color=#8E2EC4 icon=\"ïƒƒ\"\nnamespace game {\n    /**\n    * The amount of time elapsed per frame\n    *\n    */\n    //% block\n    export function getDeltaTime(): number {\n        return control.eventContext().deltaTimeMillis\n    }\n}","images.g.jres":"{\n    \"image1\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAA8P8PAAAAAADwEfEPAAAAAPAREfEPAAAA8BEREfEPAAAAHxEREfEPAAAfEREREQ8AAPARERHxAAAA8BEREQ8AAAAAHxHx8QAAAAAfER8RDwAAAPDx8BHxAAAA8A8AHw8AAAAAAADwAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"cursor\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myImages\"\n    }\n}","images.g.ts":"","tilemap.g.jres":"{\n    \"transparency16\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true\n    },\n    \"test1\": {\n        \"id\": \"test1\",\n        \"mimeType\": \"application/mkcd-tilemap\",\n        \"data\": \"MTAxMDAwMTAwMDAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMTAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAxMDIwMjAyMDIwMjAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMjAyMDIwMjAyMDEwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDEwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMTAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAxMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDEwMjAyMDIwMjAyMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMA==\",\n        \"tileset\": [\n            \"myTiles.transparency16\",\n            \"sprites.castle.tilePath5\",\n            \"sprites.castle.tileGrass1\"\n        ],\n        \"displayName\": \"test\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myTiles\"\n    }\n}","tilemap.g.ts":"","customClasses.ts":"class Vector2 {\n    x: number = 0\n    y: number = 0\n\n    constructor(x: number, y: number) {\n        this.x = x\n        this.y = y\n    }\n    static ONE() {\n        return new Vector2(1, 1)\n    }\n    static ZERO() {\n        return new Vector2(0, 0)\n    }\n    length(): number {\n        let vector: Vector2 = Vector2.ZERO()\n        return spriteutils.distanceBetween(this, vector)\n    }\n    add(vector2: Vector2): Vector2 {\n        return new Vector2(this.x + vector2.x, this.y + vector2.y)\n    }\n    subtract(vector2: Vector2): Vector2 {\n        return new Vector2(vector2.x - this.x, vector2.y - this.y)\n    }\n    normalize(): Vector2 {\n        let length: number = this.length()\n        return new Vector2(this.x / length, this.y / length)\n    }\n    scale(scalar: number): Vector2 {\n        return new Vector2(scalar * this.x, scalar * this.y)\n    }\n    lerp(vector1: Vector2, t: number): Vector2 {\n        let resultVector: Vector2 = Vector2.ZERO()\n        resultVector.x = Math.lerp(this.x, vector1.x, t)\n        resultVector.y = Math.lerp(this.y, vector1.y, t)\n        return resultVector\n    }\n    dot(vector1: Vector2): number {\n        return this.x * vector1.x + this.y * vector1.y\n    }\n}","pxt.json":"{\n    \"name\": \"tower-defense-revitalized\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\",\n        \"arcade-sprite-util\": \"github:jwunderl/arcade-sprite-util#v0.4.1\",\n        \"pxt-arcade-image-transform\": \"github:robo-technical-group/pxt-arcade-image-transform#v1.0.9\",\n        \"arcade-sprite-data\": \"github:microsoft/arcade-sprite-data#v0.2.1\",\n        \"browser-events\": \"*\",\n        \"color-coded-tilemap\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\",\n        \"deltaTime.ts\",\n        \"images.g.jres\",\n        \"images.g.ts\",\n        \"tilemap.g.jres\",\n        \"tilemap.g.ts\",\n        \"customClasses.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1754241119731,"editorVersion":"2.0.56","text":{"main.ts":"namespace SpriteKind {\n    export const Cursor = SpriteKind.create()\n}\n\nlet cursorSprite: Sprite = null\n\nonStart()\n\nfunction onStart() : void {\n    createCursor()\n    createLevel()\n}\n\nfunction createCursor() : void {\n    cursorSprite = sprites.create(assets.image`cursor`, SpriteKind.Cursor)\n    forever(function(){\n        cursorSprite.setPosition(browserEvents.mouseX() + scene.cameraProperty(CameraProperty.Left), browserEvents.mouseY() + scene.cameraProperty(CameraProperty.Top))\n    })\n}\n\nfunction createLevel() : void {\n    scene.setTileMapLevel(assets.tilemap`test`)\n    cameraController()\n}\n\nfunction cameraController() : void {\n    let cameraPosition: Vector2 = Vector2.ZERO()\n    const cameraSpeed: number = 0.25\n    forever(function(){\n        if(controller.up.isPressed() && cameraPosition.y > 0){\n            cameraPosition.y -= cameraSpeed * game.getDeltaTime()\n        } else if (controller.down.isPressed() && cameraPosition.y < game.currentScene().tileMap.areaHeight()){\n            cameraPosition.y += cameraSpeed * game.getDeltaTime()\n        }\n        if(controller.left.isPressed() && cameraPosition.x > 0){\n            cameraPosition.x -= cameraSpeed * game.getDeltaTime()\n        } else if (controller.right.isPressed() && cameraPosition.x < game.currentScene().tileMap.areaWidth()){\n            cameraPosition.x += cameraSpeed * game.getDeltaTime()\n        }\n        scene.centerCameraAt(cameraPosition.x, cameraPosition.y)\n    })\n}","README.md":" ","assets.json":"","deltaTime.ts":"//% weight=100 color=#8E2EC4 icon=\"ïƒƒ\"\nnamespace Math {\n    /**\n    * Linear interpolation between two values\n    * @param value0 is a real number, eg: 25.44\n    * @param value1 is a different real number, eg: 52.14\n    */\n    //% block\n    export function lerp(value0: number, value1: number, t: number): number {\n        return value0 + t * (value1 - value0);\n    }\n    /**\n    * Linear interpolation between two values, in particular with angles\n    * as angles are restricted between the interval [-Math.PI, Math.PI]\n    * @param value0 is a real number, eg: 25.44\n    * @param value1 is a different real number, eg: 52.14\n    */\n    //% block\n    export function lerpAngle(value0: number, value1: number, t: number): number {\n        let horizontalComponent = (1 - t) * Math.cos(value0) + t * Math.cos(value1);\n        let verticalComponent = (1 - t) * Math.sin(value0) + t * Math.sin(value1);\n        return Math.atan2(verticalComponent, horizontalComponent);\n    }\n}\n\n//% weight=100 color=#8E2EC4 icon=\"ïƒƒ\"\nnamespace game {\n    /**\n    * The amount of time elapsed per frame\n    *\n    */\n    //% block\n    export function getDeltaTime(): number {\n        return control.eventContext().deltaTimeMillis\n    }\n}","images.g.jres":"{\n    \"image1\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAIAAAAAAAAgAgAAAAAAICIiAgAAAAAgIiICAAAAAAAgAgAAAAAAACACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"displayName\": \"cursor\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myImages\"\n    }\n}","images.g.ts":"","tilemap.g.jres":"{\n    \"transparency16\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true\n    },\n    \"test1\": {\n        \"id\": \"test1\",\n        \"mimeType\": \"application/mkcd-tilemap\",\n        \"data\": \"MTAxMDAwMTAwMDAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMTAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAxMDIwMjAyMDIwMjAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMjAyMDIwMjAyMDEwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDEwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMTAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAxMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDEwMjAyMDIwMjAyMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDIwMjAyMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMA==\",\n        \"tileset\": [\n            \"myTiles.transparency16\",\n            \"sprites.castle.tilePath5\",\n            \"sprites.castle.tileGrass1\"\n        ],\n        \"displayName\": \"test\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myTiles\"\n    }\n}","tilemap.g.ts":"","customClasses.ts":"class Vector2 {\n    x: number = 0\n    y: number = 0\n\n    constructor(x: number, y: number) {\n        this.x = x\n        this.y = y\n    }\n    static ONE() {\n        return new Vector2(1, 1)\n    }\n    static ZERO() {\n        return new Vector2(0, 0)\n    }\n    length(): number {\n        let vector: Vector2 = Vector2.ZERO()\n        return spriteutils.distanceBetween(this, vector)\n    }\n    add(vector2: Vector2): Vector2 {\n        return new Vector2(this.x + vector2.x, this.y + vector2.y)\n    }\n    subtract(vector2: Vector2): Vector2 {\n        return new Vector2(vector2.x - this.x, vector2.y - this.y)\n    }\n    normalize(): Vector2 {\n        let length: number = this.length()\n        return new Vector2(this.x / length, this.y / length)\n    }\n    scale(scalar: number): Vector2 {\n        return new Vector2(scalar * this.x, scalar * this.y)\n    }\n    lerp(vector1: Vector2, t: number): Vector2 {\n        let resultVector: Vector2 = Vector2.ZERO()\n        resultVector.x = Math.lerp(this.x, vector1.x, t)\n        resultVector.y = Math.lerp(this.y, vector1.y, t)\n        return resultVector\n    }\n    dot(vector1: Vector2): number {\n        return this.x * vector1.x + this.y * vector1.y\n    }\n}","pxt.json":"{\n    \"name\": \"tower-defense-revitalized\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\",\n        \"arcade-sprite-util\": \"github:jwunderl/arcade-sprite-util#v0.4.1\",\n        \"pxt-arcade-image-transform\": \"github:robo-technical-group/pxt-arcade-image-transform#v1.0.9\",\n        \"arcade-sprite-data\": \"github:microsoft/arcade-sprite-data#v0.2.1\",\n        \"browser-events\": \"*\",\n        \"color-coded-tilemap\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\",\n        \"deltaTime.ts\",\n        \"images.g.jres\",\n        \"images.g.ts\",\n        \"tilemap.g.jres\",\n        \"tilemap.g.ts\",\n        \"customClasses.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}}],"shares":[],"lastSaveTime":1754241119734}